#!/usr/bin/env node
const CgiNodeConfig={Version:"0.2.2",StartTag:"<?",EndTag:"?>",ScriptExtensions:[".js"],EmbededScriptExtensions:[".jss"],SessionCookie:"CGI-NODE-SESSIONID",SessionTimeOut:9e5,SessionPath:"D:/Programs/nodejs/sessions/"};function CgiHttpContext(){var e=this;this.__scripts=[],this.__vmContext=null,this.request=new CgiHttpRequest,this.response=new CgiHttpResponse,
this.session=new CgiHttpSession(this.request,this.response),this.write=this.response.write,this.process=process,this.require=require,this.mapPath=function(t){const s=Path.dirname(e.request.server.path_translated);return Path.resolve(s,t)},this.include=function(t){const s=e.mapPath(t),o=FS.readFileSync(s,{encoding:"utf8"});let i
;i=".js"!=Path.extname(t)?CgiParser.script(e.__scripts.length,s,o.toString()):{id:e.__scripts.length,path:s,script:null,code:o,content:[]},e.__scripts.push(i),null===e.__vmContext&&(e.__vmContext=VM.createContext(e)),VM.runInContext(i.code,e.__vmContext,i.path)},this.cgiNodeInfo=function(){const t=(t,s)=>{e.response.write('<tr><th colspan="2">'+t+"</th></tr>");for(let e in s){let t=s[e]
;if("function"!=typeof t){if("object"==typeof t){let e='<table class="NodeASPTable" border="0" style="margin: 0px">';for(var o in t)e+="<tr><td>"+o+"</td><td>"+t[o]+"</td></tr>";t=e+"</table>"}process.stdout.write("<tr><td>"+e+"</td><td>"+t+"</td></tr>")}}}
;e.response.write("<style>.Logo{ text-align: left; font-size: 36px !important; } .NodeASPTable{ font-family: arial; font-size: 12px; margin: auto; border-collapse: collapse; width: 600px} .NodeASPTable TH{ background-color: #303030; color: white; font-size: 14px; padding: 10px} .NodeASPTable TD{ padding: 5px; } .NodeASPTable TR TD:nth-child(1){ background: #d9ebb3; }</style>"),
e.response.write('<table class="NodeASPTable" border="1">'),e.response.write('<tr><th colspan="2" class="Logo">CGI-NODE v'+CgiNodeConfig.Version+"</th></tr>");const s={id:e.session.id,path:e.session.path,ipAddress:e.session.ipAddress};t("Node Versions",process.versions),t("CGI Command Line Arguments",process.argv),t("Server Variables",e.request.server),t("HTTP Request Headers",e.request.headers),
t("HTTP Request Cookies",e.request.cookies),t("Session",s),t("Session Cookies",e.session.cookies),t("Session Data",e.session.data),t("URL Query String",e.request.query),t("Post Form",e.request.post.form),t("Post Files",e.request.post.files),t("Post Parts",e.request.post.parts),e.response.write("</table>")}}function CgiHttpSession(e,t){const s=this;this.id,this.path,this.ipAddress,this.cookies={},
this.data={},this.init=()=>{t.session=s,s.id=e.cookies[CgiNodeConfig.SessionCookie]||s.create();let o=Path.join(CgiNodeConfig.SessionPath,s.id);FS.existsSync(o)||(s.id=s.create()),o=Path.join(CgiNodeConfig.SessionPath,s.id);const i=JSON.parse(FS.readFileSync(o,{encoding:"utf8"}));if(i.ipAddress!=e.server.remote_addr)throw"Invalid session ID!";s.id=i.id,s.path=i.path,s.ipAddress=i.ipAddress,
s.cookies=i.cookies,s.data=i.data},this.save=()=>{const e={id:s.id,path:s.path,ipAddress:s.ipAddress,cookies:s.cookies,data:s.data};FS.writeFileSync(s.path,JSON.stringify(e))},this.create=()=>{let t,s=0;do{if(s>=10)throw new Error("Unable to generate a new session ID");s++;const o=[e.server.remote_addr,e.server.remote_port,e.server.unique_id,Date.now(),Math.random(),s].join("")
;t=Crypto.createHash("md5").update(o,"utf8").digest("hex")}while(FS.existsSync(Path.join(CgiNodeConfig.SessionPath,t)));const o={id:t,path:Path.join(CgiNodeConfig.SessionPath,t),ipAddress:e.server.remote_addr,cookies:{},data:{}};return o.cookies[CgiNodeConfig.SessionCookie]={name:CgiNodeConfig.SessionCookie,value:t,httpOnly:!0,notSent:!0,server:!0},FS.writeFileSync(o.path,JSON.stringify(o)),o.id},
this.cleanUp=()=>{const e=Date.now(),t=CgiNodeConfig.SessionTimeOut,s=FS.readdirSync(CgiNodeConfig.SessionPath);for(let o=0;o<s.length;o++){const i=Path.join(CgiNodeConfig.SessionPath,s[o]);FS.statSync(i).mtime.getTime()+t<e&&FS.unlinkSync(i)}},s.init()}function CgiHttpResponse(){const e=this;this.session=null,this.isHeaderSent=!1,this.headers={"content-type":"text/html; charset=utf-8"},
this.sendHeaders=()=>{if(!e.isHeaderSent){e.isHeaderSent=!0;for(let t in e.headers)process.stdout.write(t+":"+e.headers[t]+"\r\n");for(let t in e.session.cookies){const s=e.session.cookies[t];!0===s.notSent&&(delete s.notSent,process.stdout.write("Set-Cookie:"+CgiParser.serializeCookie(s)+"\r\n"))}process.stdout.write("\r\n")}},this.write=t=>{e.sendHeaders(),process.stdout.write(t.toString())},
this.end=()=>{e.sendHeaders(),process.exit()}}function CgiHttpRequest(){const e=this;this.url=null,this.method,this.httpVersion,this.query,this.post={form:{},files:[],parts:[],data:"",isMultiPart:!1},this.server={},this.headers={},this.cookies={},this.form={},this.init=()=>{CgiParser.environmentVariablesAndHeaders(process.env,e.server,e.headers),e.method=e.server.request_method,
e.httpVersion=e.server.server_protocol,e.headers.content_type=e.server.content_type??"",e.headers.content_length=e.server.content_length??0,e.headers.cookie&&(e.cookies=CgiParser.cookies(e.headers.cookie)),e.url=URL.parse(e.server.request_uri,!0),e.query=e.url.query,e.post.isMultiPart=e.headers.content_type.toLowerCase().includes("multipart/form-data")},this.readPost=(t=(()=>null),s=!0)=>{
process.stdin.on("data",(t=>{e.post.data+=t})),process.stdin.on("end",(()=>{s&&e.parsePost(),t()}))},this.parsePost=()=>{e.post.isMultiPart?CgiParser.multiPart(e.post.data,e.post):e.post.form=QueryString.parse(e.post.data)},this.init()}var CgiParser={script:(e,t,s)=>{const o=CgiNodeConfig.StartTag,i=CgiNodeConfig.EndTag,n="response.write( __scripts["+e+"].content[",r={id:e,path:t,code:"",
content:[]};let a=0,d=0;for(;a<s.length;)if(a=s.indexOf(o,d),a>=0){a>d&&(r.code+=n+r.content.length+"]);",r.content.push(s.slice(d,a))),d=a+o.length;const e="="==s[d]?d++:-1;if(a=s.indexOf(i,d),!(a>=0))throw new Error("Missing close tag ?>");r.code+=e>0?"response.write( "+s.slice(d,a)+" ); ":s.slice(d,a)+";",d=a+i.length}else a=s.length,r.code+=n+r.content.length+"]);",r.content.push(s.slice(d,a))
;return r},environmentVariablesAndHeaders:(e,t,s)=>{for(let i in e){var o=e[i];i=i.toLowerCase(),0===i.indexOf("http_")?s[i.substring("http_".length)]=o:t[i]=o}},multiPart:(e,t={form:{},files:{},parts:[],isMultiPart:!1,data:""})=>{let s=0,o=0;s=e.indexOf("\n");const i=e.substring(o,s-1);o=s+1,t.parts=e.split(i);for(var n=0;n<t.parts.length;n++);return t},serializeCookie:e=>{
const t=[e.name+"="+encodeURIComponent(e.value)];return e.domain&&t.push("Domain="+e.domain),e.path&&t.push("Path="+e.path),e.expires&&t.push("Expires="+e.expires.toUTCString()),e.httpOnly&&t.push("HttpOnly"),t.join("; ")},cookies:e=>{const t=e.split(";"),s={};for(let e=0;e<t.length;e++){const o=t[e],i=o.indexOf("=");if(i<0)continue;const n=o.substr(0,i).trim();let r=o.substr(i+1,o.length).trim()
;'"'==r[0]&&(r=r.slice(1,-1));try{s[n]=decodeURIComponent(r)}catch(e){s[n]=r}}return s}},VM=require("vm"),FS=require("fs"),URL=require("url"),Path=require("path"),Crypto=require("crypto"),QueryString=require("querystring");let cgiNodeContext=null;process.on("uncaughtException",(function(e){
const t=`\n\t<br/>\n\t<div style="color:red">\n\t\t<b>EXCEPTION</b>: ${e.message}\n\t\t<i><pre>${e.stack}</pre></i>\n\t</div>\n\t</br>`;cgiNodeContext?cgiNodeContext.response.write(t):process.stdout.write("Content-type: text/html; charset=iso-8859-1\n\n"+t)})),process.on("exit",(function(){cgiNodeContext&&(cgiNodeContext.session.save(),cgiNodeContext.session.cleanUp())})),
cgiNodeContext=new CgiHttpContext;const onReady=function(){if(!cgiNodeContext)throw new TypeError("Cgi Node Context not created");cgiNodeContext.include(process.env.PATH_TRANSLATED)};"POST"!==cgiNodeContext.request.method?onReady():cgiNodeContext.request.readPost(onReady);