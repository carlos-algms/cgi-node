#!/usr/bin/env node
const CgiNodeConfig={Version:"0.2.2",StartTag:"<?",EndTag:"?>",ScriptExtensions:[".js"],EmbededScriptExtensions:[".jss"],SessionCookie:"CGI-NODE-SESSIONID",SessionTimeOut:9e5,SessionPath:"/usr/local/apache2/node-sessions"};function CgiHttpContext(){const t=this;this.__scripts=[],this.__vmContext=null,this.request=new CgiHttpRequest,this.response=new CgiHttpResponse,
this.session=new CgiHttpSession(this.request,this.response),this.write=this.response.write,this.process=process,this.require=require,this.mapPath=e=>{const s=Path.dirname(t.request.server.path_translated);return Path.resolve(s,e)},this.include=e=>{const s=t.mapPath(e),o=FS.readFileSync(s,{encoding:"utf8"});let i;i=".js"!=Path.extname(e)?CgiParser.script(t.__scripts.length,s,o.toString()):{
id:t.__scripts.length,path:s,script:null,code:o,content:[]},t.__scripts.push(i),null===t.__vmContext&&(t.__vmContext=VM.createContext(t)),VM.runInContext(i.code,t.__vmContext,i.path)},this.cgiNodeInfo=()=>{const e=(e,s)=>{t.response.write('<tr><th colspan="2">'+e+"</th></tr>");for(let t in s){let e=s[t];if("function"!=typeof e){if("object"==typeof e){
let t='<table class="NodeASPTable" border="0" style="margin: 0px">';for(let s in e)t+="<tr><td>"+s+"</td><td>"+e[s]+"</td></tr>";e=t+"</table>"}process.stdout.write("<tr><td>"+t+"</td><td>"+e+"</td></tr>")}}}
;t.response.write("<style>\n\t\t\t\t\t.Logo {\n\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\tfont-size: 36px !important;\n\t\t\t\t\t}\n\n\t\t\t\t\t.NodeASPTable {\n\t\t\t\t\t\tfont-family: arial;\n\t\t\t\t\t\tmargin: auto;\n\t\t\t\t\t\tborder-collapse: collapse;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\n\t\t\t\t\t.NodeASPTable th {\n\t\t\t\t\t\tbackground-color: #303030;\n\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t\tfont-size: 2em;\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t}\n\n\t\t\t\t\t.NodeASPTable td {\n\t\t\t\t\t\tpadding: 5px;\n\t\t\t\t\t}\n\n\t\t\t\t\t.NodeASPTable td + td {\n\t\t\t\t\t\tword-break: break-all;\n\t\t\t\t\t}\n\n\t\t\t\t\t.NodeASPTable tr td:nth-child(1) {\n\t\t\t\t\t\tbackground: #d9ebb3;\n\t\t\t\t\t}\n\t\t\t</style>"),
t.response.write('<table class="NodeASPTable" border="1">'),t.response.write('<tr><th colspan="2" class="Logo">CGI-NODE v'+CgiNodeConfig.Version+"</th></tr>");const s={id:t.session.id,path:t.session.path,ipAddress:t.session.ipAddress};e("Node Versions",process.versions),e("CGI Command Line Arguments",process.argv),e("Server Variables",t.request.server),e("HTTP Request Headers",t.request.headers),
e("HTTP Request Cookies",t.request.cookies),e("Session",s),e("Session Cookies",t.session.cookies),e("Session Data",t.session.data),e("URL Query String",t.request.query),e("Post Form",t.request.post.form),e("Post Files",t.request.post.files),e("Post Parts",t.request.post.parts),t.response.write("</table>")}}function CgiHttpSession(t,e){const s=this;this.id,this.path,this.ipAddress,this.cookies={},
this.data={},this.init=()=>{e.session=s,s.id=t.cookies[CgiNodeConfig.SessionCookie]||s.create();let o=Path.join(CgiNodeConfig.SessionPath,s.id);FS.existsSync(o)||(s.id=s.create()),o=Path.join(CgiNodeConfig.SessionPath,s.id);const i=JSON.parse(FS.readFileSync(o,{encoding:"utf8"}));if(i.ipAddress!=t.server.remote_addr)throw new Error("Invalid session ID!");s.id=i.id,s.path=i.path,
s.ipAddress=i.ipAddress,s.cookies=i.cookies,s.data=i.data},this.save=()=>{const t={id:s.id,path:s.path,ipAddress:s.ipAddress,cookies:s.cookies,data:s.data};FS.writeFileSync(s.path,JSON.stringify(t))},this.create=()=>{let e,s=0;do{if(s>=10)throw new Error("Unable to generate a new session ID");s++
;const o=[t.server.remote_addr,t.server.remote_port,t.server.unique_id,Date.now(),Math.random(),s].join("");e=Crypto.createHash("md5").update(o,"utf8").digest("hex")}while(FS.existsSync(Path.join(CgiNodeConfig.SessionPath,e)));const o={id:e,path:Path.join(CgiNodeConfig.SessionPath,e),ipAddress:t.server.remote_addr,cookies:{},data:{}};return o.cookies[CgiNodeConfig.SessionCookie]={
name:CgiNodeConfig.SessionCookie,value:e,httpOnly:!0,notSent:!0,server:!0},FS.writeFileSync(o.path,JSON.stringify(o)),o.id},this.cleanUp=()=>{const t=Date.now(),e=CgiNodeConfig.SessionTimeOut,s=FS.readdirSync(CgiNodeConfig.SessionPath);for(let o=0;o<s.length;o++){const i=Path.join(CgiNodeConfig.SessionPath,s[o]);FS.statSync(i).mtime.getTime()+e<t&&FS.unlinkSync(i)}},s.init()}
function CgiHttpResponse(){const t=this;this.session=null,this.isHeaderSent=!1,this.headers={"content-type":"text/html; charset=utf-8"},this.sendHeaders=()=>{if(!t.isHeaderSent){t.isHeaderSent=!0;for(let e in t.headers)process.stdout.write(e+":"+t.headers[e]+"\r\n");for(let e in t.session.cookies){const s=t.session.cookies[e];!0===s.notSent&&(delete s.notSent,
process.stdout.write("Set-Cookie:"+CgiParser.serializeCookie(s)+"\r\n"))}process.stdout.write("\r\n")}},this.write=e=>{t.sendHeaders(),process.stdout.write(e.toString())},this.end=()=>{t.sendHeaders(),process.exit()}}function CgiHttpRequest(){const t=this;this.url=null,this.method,this.httpVersion,this.query,this.post={form:{},files:[],parts:[],data:"",isMultiPart:!1},this.server={},
this.headers={},this.cookies={},this.form={},this.init=()=>{CgiParser.environmentVariablesAndHeaders(process.env,t.server,t.headers),t.method=t.server.request_method,t.httpVersion=t.server.server_protocol,t.headers.content_type=t.server.content_type??"",t.headers.content_length=t.server.content_length??0,t.headers.cookie&&(t.cookies=CgiParser.cookies(t.headers.cookie)),
t.url=URL.parse(t.server.request_uri,!0),t.query=t.url.query,t.post.isMultiPart=t.headers.content_type.toLowerCase().includes("multipart/form-data")},this.readPost=(e=(()=>null),s=!0)=>{process.stdin.on("data",(e=>{t.post.data+=e})),process.stdin.on("end",(()=>{s&&t.parsePost(),e()}))},this.parsePost=()=>{
t.post.isMultiPart?CgiParser.multiPart(t.post.data,t.post):t.post.form=QueryString.parse(t.post.data)},this.init()}var CgiParser={script:(t,e,s)=>{const o=CgiNodeConfig.StartTag,i=CgiNodeConfig.EndTag,n="response.write( __scripts["+t+"].content[",r={id:t,path:e,code:"",content:[]};let a=0,d=0;for(;a<s.length;)if(a=s.indexOf(o,d),a>=0){a>d&&(r.code+=n+r.content.length+"]);",
r.content.push(s.slice(d,a))),d=a+o.length;const t="="==s[d]?d++:-1;if(a=s.indexOf(i,d),!(a>=0))throw new Error("Missing close tag ?>");r.code+=t>0?"response.write( "+s.slice(d,a)+" ); ":s.slice(d,a)+";",d=a+i.length}else a=s.length,r.code+=n+r.content.length+"]);",r.content.push(s.slice(d,a));return r},environmentVariablesAndHeaders:(t,e,s)=>{for(let o in t){const i=t[o];o=o.toLowerCase(),
0===o.indexOf("http_")?s[o.substring("http_".length)]=i:e[o]=i}},multiPart:(t,e={form:{},files:{},parts:[],isMultiPart:!1,data:""})=>{let s=0,o=0;s=t.indexOf("\n");const i=t.substring(o,s-1);o=s+1,e.parts=t.split(i);for(let t=0;t<e.parts.length;t++);return e},serializeCookie:t=>{const e=[t.name+"="+encodeURIComponent(t.value)];return t.domain&&e.push("Domain="+t.domain),
t.path&&e.push("Path="+t.path),t.expires&&e.push("Expires="+t.expires.toUTCString()),t.httpOnly&&e.push("HttpOnly"),e.join("; ")},cookies:t=>{const e=t.split(";"),s={};for(let t=0;t<e.length;t++){const o=e[t],i=o.indexOf("=");if(i<0)continue;const n=o.substr(0,i).trim();let r=o.substr(i+1,o.length).trim();'"'==r[0]&&(r=r.slice(1,-1));try{s[n]=decodeURIComponent(r)}catch(t){s[n]=r}}return s}
},VM=require("vm"),FS=require("fs"),URL=require("url"),Path=require("path"),Crypto=require("crypto"),QueryString=require("querystring");let cgiNodeContext=null;process.on("uncaughtException",(t=>{const e=`\n\t<br/>\n\t<div style="color:red">\n\t\t<b>EXCEPTION</b>: ${t.message}\n\t\t<i><pre>${t.stack}</pre></i>\n\t</div>\n\t</br>`
;cgiNodeContext?cgiNodeContext.response.write(e):process.stdout.write("Content-type: text/html; charset=utf-8\n\n"+e)})),process.on("exit",(()=>{cgiNodeContext&&(cgiNodeContext.session.save(),cgiNodeContext.session.cleanUp())})),cgiNodeContext=new CgiHttpContext;const onReady=()=>{if(!cgiNodeContext)throw new TypeError("Cgi Node Context not created")
;cgiNodeContext.include(process.env.PATH_TRANSLATED)};"POST"!==cgiNodeContext.request.method?onReady():cgiNodeContext.request.readPost(onReady);